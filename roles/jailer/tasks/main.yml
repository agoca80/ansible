- name: debug interface
  debug:
    var: ipv4_addrs

- name: configure interface
  lineinfile:
    regexp: "^ipv4_addrs_{{ jailer_interface }}="
    path:   "/etc/rc.conf"
    line:   "ipv4_addrs_{{ jailer_interface }}=\"{{ ipv4_addrs }}\""
  notify: restart interface

- name: Create freebsd-dist
  file:
    path: /usr/freebsd-dist
    state: directory

- name: Get base distribution
  command: bsdinstall distfetch
  environment:
    BSDINSTALL_DISTSITE: "{{ jailer_distsite }}"
    BSDINSTALL_DISTDIR: /usr/freebsd-dist
    DISTRIBUTIONS: base.txz
  args:
    creates: /usr/freebsd-dist/base.txz

- name: Create base jail
  block:

    - name: Create base jail dataset
      when: jailer_dataset is defined
      zfs:
        name: "{{ jailer_dataset }}/base"
        state: present

    - name: Create base root directory
      when: jailer_dataset is not defined
      file:
        path: "{{ jailer_base_root }}"
        state: directory

- name: Extract base distribution
  command: tar xf /usr/freebsd-dist/base.txz -C {{ jailer_base_root }}
  args:
    creates: "{{ jailer_base_root }}/COPYRIGHT"

- name: Snapshot base jail
  when: jailer_dataset is defined
  zfs:
    name: "{{ jailer_dataset }}/base@{{ jailer_base_snapshot }}"
    state: present

- name: Create /etc/jail.conf
  template:
    src: jail.conf
    dest: /etc/
    owner: root
    group: wheel
    mode: "0644"
    backup: yes
  notify: restart service

- name: Create jails
  block:

    - name: Clone jail
      when: jailer_dataset is defined
      loop: "{{ jailer_jails }}"
      zfs:
        name: "{{ jailer_dataset }}/{{ item.name }}"
        state: "{{ item.state }}"
        origin: "{{ jailer_dataset }}/base@{{ jailer_base_snapshot }}"

    - name: Copy jail
      when: jailer_dataset is not defined
      loop: "{{ jailer_jails }}"
      copy:
        dest: "{{ jailer_directory }}/{{ item.name }}"
        force: no
        mode: preserve
        src: "{{ jailer_base_root }}/"
        remote_src: yes

- name: Start jail
  loop: "{{ jailer_jails }}"
  shell: jls -j item.name | service jail start {{ item.name }}
